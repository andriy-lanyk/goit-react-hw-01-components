{"version":3,"sources":["components/Profile/Client/default.jpg","components/Profile/Client/Client.styles.js","components/Profile/Client/Client.js","components/Profile/TagList/TagList.styles.js","components/Profile/TagList/TagList.js","components/Profile/Profile/Profile.styles.js","components/Profile/Profile/Profile.js","components/Statistics/Label/Label.styled.js","components/Statistics/Label/Label.js","components/Statistics/Percentage/Percentage.styled.js","components/Statistics/Percentage/Percentage.js","components/Statistics/List/List.styled.js","components/Statistics/List/List.js","components/Statistics/Section/Section.styles.js","components/Statistics/Section/Section.js","components/FriendList/FriendListItem/FriendListItem.styled.js","components/FriendList/FriendListItem/FriendListItem.js","components/FriendList/FriendList/FriendList.styled.js","components/FriendList/FriendList/FriendList.js","components/TransactionHistory/TableHead/TableHead.styled.js","components/TransactionHistory/TableHead/TableHead.js","components/TransactionHistory/TableBody/TableBody.styled.js","components/TransactionHistory/TableBody/TableBody.js","components/TransactionHistory/TransactionsHistory/TransactionsHistory.styled.js","components/TransactionHistory/TransactionsHistory/TransactionsHistory.js","components/App/App.styles.js","components/App/App.js","index.js"],"names":["ClientLayout","styled","div","ClientImg","img","ClientName","p","ClientTag","ClientLocation","Client","avatar","name","tag","location","src","alt","defaultProps","defaultImg","List","ul","ListItem","li","props","border","ItemNumber","span","TagList","stats","followers","views","likes","ProfileContainer","Profile","Label","LabelName","label","Percentage","PercentageNumber","percentage","randomColor","Math","floor","random","ListStatisticItem","StatisticList","SectionWrapper","section","ListStatistic","TitleStatistic","h2","Statistics","title","map","id","ItemOfFriends","StatusItem","prop","status","AvatarFriend","NameFriend","FriendListItem","isOnline","width","ListOfFriends","FriendList","friends","HeadOfTable","thead","CellOfHead","th","TableHead","type","amount","currency","BobyStyled","tbody","RowOfBody","tr","row","CellOfBody","td","TableBody","transactions","i","TransactionsTable","table","TransactionHistory","items","Object","keys","Wrapper","App","user","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"urEAAe,MAA0B,oC,cCEnCA,EAAeC,IAAOC,IAAV,mLAUZC,EAAYF,IAAOG,IAAV,6JASTC,EAAaJ,IAAOK,EAAV,0FAMVC,EAAYN,IAAOK,EAAV,oEAKTE,EAAiBP,IAAOK,EAAV,6D,OCrBPG,EAAS,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SAC1C,OACE,eAACb,EAAD,WACE,cAACG,EAAD,CAAWW,IAAKJ,EAAQK,IAAI,kHAC5B,cAACV,EAAD,UAAaM,IACb,cAACJ,EAAD,UAAYK,IACZ,cAACJ,EAAD,UAAiBK,QAKvBJ,EAAOO,aAAe,CACpBN,OAAQO,GCrBV,I,QAAMC,EAAOjB,IAAOkB,GAAV,kMAUJC,EAAWnB,IAAOoB,GAAV,mNAMI,SAACC,GAAD,MACG,SAAjBA,EAAMC,OAAoB,qBAAuB,OAM/CC,EAAavB,IAAOwB,KAAV,yFCrBHC,EAAU,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChBC,EAA4BD,EAA5BC,UAAWC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,MAC1B,OACE,eAACZ,EAAD,WACE,eAACE,EAAD,WACE,6CACA,cAACI,EAAD,UAAaI,OAEf,eAACR,EAAD,WACE,yCACA,cAACI,EAAD,UAAaK,OAEf,eAACT,EAAD,CAAUG,OAAO,OAAjB,UACE,yCACA,cAACC,EAAD,UAAaM,WChBRC,EAAmB9B,IAAOC,IAAV,mOCGhB8B,EAAU,SAAC,GAA4C,IAA1CtB,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,SAAUc,EAAY,EAAZA,MACrD,OACE,eAACI,EAAD,WACE,cAAC,EAAD,CAAQrB,OAAQA,EAAQC,KAAMA,EAAMC,IAAKA,EAAKC,SAAUA,IACxD,cAAC,EAAD,CAASc,MAAOA,QCPTM,EAAQhC,IAAOwB,KAAV,oDCELS,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,OAAO,cAACF,EAAD,UAAQE,KCHJC,EAAanC,IAAOwB,KAAV,gDCEVY,EAAmB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACjC,OAAO,eAACF,EAAD,WAAaE,EAAb,QCHT,SAASC,IACP,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,SAAiB,GAG1C,I,cAAMC,EAAoB1C,IAAOoB,GAAV,sMAMGkB,EAAgBA,EAAgBA,GCPpDK,EAAgB,SAAC,GAA2B,IAAzBT,EAAwB,EAAxBA,MAAOG,EAAiB,EAAjBA,WAC9B,OACE,eAACK,EAAD,WACE,cAAC,EAAD,CAAWR,MAAOA,IAClB,cAAC,EAAD,CAAkBG,WAAYA,QCP9BO,EAAiB5C,IAAO6C,QAAV,iKAQdC,EAAgB9C,IAAOkB,GAAV,iHAQb6B,EAAiB/C,IAAOgD,GAAV,kLCRdC,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOxB,EAAY,EAAZA,MAC3B,OACE,eAACkB,EAAD,WACGM,GAAS,cAACH,EAAD,UAAiBG,IAC3B,cAACJ,EAAD,UACGpB,EAAMyB,KAAI,gBAAGC,EAAH,EAAGA,GAAIlB,EAAP,EAAOA,MAAOG,EAAd,EAAcA,WAAd,OACT,cAAC,EAAD,CAAwBH,MAAOA,EAAOG,WAAYA,GAA9Be,YAO9BH,EAAWlC,aAAe,CACxBmC,MAAO,MCtBT,I,uBAAMG,GAAgBrD,IAAOoB,GAAV,gKASbkC,GAAatD,IAAOwB,KAAV,kKAMM,SAAC+B,GAAD,OAAWA,EAAKC,OAAS,QAAU,SAGnDC,GAAezD,IAAOG,IAAV,8HAQZuD,GAAa1D,IAAOK,EAAV,wFCnBHsD,GAAiB,SAAC,GAAgC,IAA9BlD,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,KAAMkD,EAAe,EAAfA,SAC7C,OACE,eAACP,GAAD,WACE,cAACC,GAAD,CAAYE,OAAQI,IACpB,cAACH,GAAD,CAAc5C,IAAKJ,EAAQK,IAAKJ,EAAMmD,MAAM,OAC5C,cAACH,GAAD,UAAahD,QCZNoD,GAAgB9D,IAAOkB,GAAV,gECGb6C,GAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3B,OACE,cAACF,GAAD,UACGE,EAAQb,KAAI,gBAAG1C,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAMkD,EAAjB,EAAiBA,SAAUR,EAA3B,EAA2BA,GAA3B,OACX,cAAC,GAAD,CAEE3C,OAAQA,EACRC,KAAMA,EACNkD,SAAUA,EACVR,GAAIA,GAJCA,S,SCRTa,GAAcjE,IAAOkE,MAAV,6GAMXC,GAAanE,IAAOoE,GAAV,oFCHHC,GAAY,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACxC,OACE,cAACP,GAAD,UACE,+BACE,cAACE,GAAD,UAAaG,IACb,cAACH,GAAD,UAAaI,IACb,cAACJ,GAAD,UAAaK,UCTfC,GAAazE,IAAO0E,MAAV,gFAKVC,GAAY3E,IAAO4E,GAAV,wDACO,SAACrB,GAAD,OAAWA,EAAKsB,IAAM,IAAM,EAAI,UAAY,aAG5DC,GAAa9E,IAAO+E,GAAV,oFCPHC,GAAY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC1B,OACE,cAACR,GAAD,UACGQ,EAAa9B,KAAI,WAAiC+B,GAAO,IAArC9B,EAAoC,EAApCA,GAAIkB,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,SACrC,OACE,eAACG,GAAD,CAAoBE,IAAKK,EAAI,EAA7B,UACE,cAACJ,GAAD,UAAaR,IACb,cAACQ,GAAD,UAAaP,IACb,cAACO,GAAD,UAAaN,MAHCpB,SCPb+B,GAAoBnF,IAAOoF,MAAV,+OCIjBC,GAAqB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnC,EAAmCC,OAAOC,KAAKF,EAAM,IAArD,oBAAShB,EAAT,KAAeC,EAAf,KAAuBC,EAAvB,KAEA,OACE,eAACW,GAAD,WACE,cAAC,GAAD,CAAWb,KAAMA,EAAMC,OAAQA,EAAQC,SAAUA,IACjD,cAAC,GAAD,CAAWS,aAAcK,Q,iCCVlBG,GAAUzF,IAAO6C,QAAV,gDC2BL6C,GAlBH,WACV,OACE,eAACD,GAAD,WACE,cAAC,EAAD,CACE/E,KAAMiF,GAAKjF,KACXC,IAAKgF,GAAKhF,IACVC,SAAU+E,GAAK/E,SACfH,OAAQkF,GAAKlF,OACbiB,MAAOiE,GAAKjE,QAEd,cAAC,EAAD,CAAYwB,MAAM,eAAexB,MAAOkE,KACxC,cAAC,EAAD,CAAYlE,MAAOkE,KACnB,cAAC,GAAD,CAAY5B,QAASA,KACrB,cAAC,GAAD,CAAoBsB,MAAOL,SCpBjCY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.a13533b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import styled from \"@emotion/styled\";\n\nconst ClientLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.5;\n  align-items: center;\n  padding: 20px 0;\n`;\n\nconst ClientImg = styled.img`\n  display: block;\n  border-radius: 50%;\n  width: 50%;\n  height: 60%;\n  margin-bottom: 20px;\n  background-color: #21212140;\n`;\n\nconst ClientName = styled.p`\n  font-size: 26px;\n  font-weight: 800;\n  margin: 0 0 10px;\n`;\n\nconst ClientTag = styled.p`\n  margin: 0 0 10px;\n  color: #a0a0a0;\n`;\n\nconst ClientLocation = styled.p`\n  margin: 0;\n  color: #a0a0a0;\n`;\n\nexport { ClientLayout, ClientImg, ClientName, ClientTag, ClientLocation };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport defaultImg from \"./default.jpg\";\nimport {\n  ClientLayout,\n  ClientImg,\n  ClientName,\n  ClientTag,\n  ClientLocation,\n} from \"./Client.styles\";\n\nexport const Client = ({ avatar, name, tag, location }) => {\n  return (\n    <ClientLayout>\n      <ClientImg src={avatar} alt=\"Аватар пользователя\" />\n      <ClientName>{name}</ClientName>\n      <ClientTag>{tag}</ClientTag>\n      <ClientLocation>{location}</ClientLocation>\n    </ClientLayout>\n  );\n};\n\nClient.defaultProps = {\n  avatar: defaultImg,\n};\n\nClient.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nconst List = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  background-color: #e1e8ea;\n  list-style: none;\n  border-top: 1px solid #a0a0a0;\n  padding: 0;\n  margin: 0;\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  font-weight: 400;\n  color: #a0a0a0;\n  border-right: ${(props) =>\n    props.border !== \"none\" ? \"1px solid #a0a0a0;\" : \";\"};\n  padding: 20px;\n  text-align: center;\n  width: 33%;\n`;\n\nconst ItemNumber = styled.span`\n  font-weight: 800;\n  margin-top: 15px;\n  color: #212121;\n`;\n\nexport { List, ListItem, ItemNumber };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, ListItem, ItemNumber } from \"./TagList.styles\";\n\nexport const TagList = ({ stats }) => {\n  const { followers, views, likes } = stats;\n  return (\n    <List>\n      <ListItem>\n        <span>Followers</span>\n        <ItemNumber>{followers}</ItemNumber>\n      </ListItem>\n      <ListItem>\n        <span>Views</span>\n        <ItemNumber>{views}</ItemNumber>\n      </ListItem>\n      <ListItem border=\"none\">\n        <span>Likes</span>\n        <ItemNumber>{likes}</ItemNumber>\n      </ListItem>\n    </List>\n  );\n};\n\nTagList.propTypes = {\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const ProfileContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 400px;\n  height: 500px;\n  border-radius: 2%;\n  box-shadow: 0 0 4px 6px #21212126;\n  margin-bottom: 40px;\n`;\n","import React from \"react\";\nimport { Client } from \"../Client/Client\";\nimport { TagList } from \"../TagList/TagList\";\nimport { ProfileContainer } from \"./Profile.styles\";\n\nexport const Profile = ({ avatar, name, tag, location, stats }) => {\n  return (\n    <ProfileContainer>\n      <Client avatar={avatar} name={name} tag={tag} location={location} />\n      <TagList stats={stats} />\n    </ProfileContainer>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.span`\n  margin-bottom: 20px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Label } from \"./Label.styled\";\n\nexport const LabelName = ({ label }) => {\n  return <Label>{label}</Label>;\n};\n\nLabelName.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Percentage = styled.span`\n  font-size: 28px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Percentage } from \"./Percentage.styled\";\n\nexport const PercentageNumber = ({ percentage }) => {\n  return <Percentage>{percentage}%</Percentage>;\n};\n\nPercentageNumber.propTypes = {\n  percentage: PropTypes.number.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nfunction randomColor() {\n  return Math.floor(Math.random() * 255 + 1);\n}\n\nconst ListStatisticItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  text-align: center;\n  padding: 20px 0;\n  background-color: rgb(${randomColor}, ${randomColor}, ${randomColor});\n  width: calc(100%);\n`;\n\nexport { ListStatisticItem };\n","import React from \"react\";\nimport { LabelName } from \"../Label/Label\";\nimport { PercentageNumber } from \"../Percentage/Percentage\";\nimport { ListStatisticItem } from \"./List.styled\";\n\nconst StatisticList = ({ label, percentage }) => {\n  return (\n    <ListStatisticItem>\n      <LabelName label={label} />\n      <PercentageNumber percentage={percentage} />\n    </ListStatisticItem>\n  );\n};\n\nexport { StatisticList };\n","import styled from \"@emotion/styled\";\n\nconst SectionWrapper = styled.section`\n  width: 400px;\n  box-shadow: 0 0 4px 6px #21212126;\n  border-radius: 0 0 10px 10px;\n  overflow: hidden;\n  margin-bottom: 50px;\n`;\n\nconst ListStatistic = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  color: white;\n`;\n\nconst TitleStatistic = styled.h2`\n  text-align: center;\n  margin: 0;\n  padding: 35px 0;\n  font-size: 30px;\n  letter-spacing: 2px;\n  color: #8a7c7c;\n  text-transform: uppercase;\n`;\n\nexport { SectionWrapper, ListStatistic, TitleStatistic };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { StatisticTitle } from \"../Title/Title\";\nimport { StatisticList } from \"../List/List\";\nimport {\n  SectionWrapper,\n  ListStatistic,\n  TitleStatistic,\n} from \"./Section.styles\";\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <SectionWrapper>\n      {title && <TitleStatistic>{title}</TitleStatistic>}\n      <ListStatistic>\n        {stats.map(({ id, label, percentage }) => (\n          <StatisticList key={id} label={label} percentage={percentage} />\n        ))}\n      </ListStatistic>\n    </SectionWrapper>\n  );\n};\n\nStatistics.defaultProps = {\n  title: null,\n};\n\nStatistics.propTypes = {\n  stats: PropTypes.array.isRequired,\n  title: PropTypes.string,\n};\n\nexport { Statistics };\n","import styled from \"@emotion/styled\";\n\nconst ItemOfFriends = styled.li`\n  display: flex;\n  width: 380px;\n  height: 90px;\n  box-shadow: 0 0 4px 6px #21212126;\n  margin-bottom: 20px;\n  padding: 10px;\n`;\n\nconst StatusItem = styled.span`\n  width: 20px;\n  height: 20px;\n  margin: auto 10px;\n  border: 1px solid #212121;\n  border-radius: 50%;\n  background-color: ${(prop) => (prop.status ? \"green\" : \"red\")};\n`;\n\nconst AvatarFriend = styled.img`\n  display: block;\n  width: 80px;\n  height: auto;\n  border-radius: 4px;\n  margin-right: 30px;\n`;\n\nconst NameFriend = styled.p`\n  margin: auto 0;\n  font-size: 36px;\n  font-weight: 800;\n`;\n\nexport { ItemOfFriends, StatusItem, AvatarFriend, NameFriend };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ItemOfFriends,\n  StatusItem,\n  AvatarFriend,\n  NameFriend,\n} from \"./FriendListItem.styled\";\n\nexport const FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <ItemOfFriends>\n      <StatusItem status={isOnline} />\n      <AvatarFriend src={avatar} alt={name} width=\"48\" />\n      <NameFriend>{name}</NameFriend>\n    </ItemOfFriends>\n  );\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const ListOfFriends = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FriendListItem } from \"../FriendListItem/FriendListItem\";\nimport { ListOfFriends } from \"./FriendList.styled\";\n\nexport const FriendList = ({ friends }) => {\n  return (\n    <ListOfFriends>\n      {friends.map(({ avatar, name, isOnline, id }) => (\n        <FriendListItem\n          key={id}\n          avatar={avatar}\n          name={name}\n          isOnline={isOnline}\n          id={id}\n        />\n      ))}\n    </ListOfFriends>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nconst HeadOfTable = styled.thead`\n  text-transform: uppercase;\n  color: #ffffff;\n  background-color: skyblue;\n`;\n\nconst CellOfHead = styled.th`\n  padding: 10px;\n  border-right: 1px solid #8e8e8e;\n`;\n\nexport { HeadOfTable, CellOfHead };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { HeadOfTable, CellOfHead } from \"../TableHead/TableHead.styled\";\n\nexport const TableHead = ({ type, amount, currency }) => {\n  return (\n    <HeadOfTable>\n      <tr>\n        <CellOfHead>{type}</CellOfHead>\n        <CellOfHead>{amount}</CellOfHead>\n        <CellOfHead>{currency}</CellOfHead>\n      </tr>\n    </HeadOfTable>\n  );\n};\n\nTableHead.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nconst BobyStyled = styled.tbody`\n  color: #8e8e8e;\n  text-transform: capitalize;\n`;\n\nconst RowOfBody = styled.tr`\n  background-color: ${(prop) => (prop.row % 2 === 0 ? \"#e2e2e2\" : \"#ffffff\")};\n`;\n\nconst CellOfBody = styled.td`\n  padding: 10px;\n  border-right: 1px solid #8e8e8e;\n`;\n\nexport { BobyStyled, CellOfBody, RowOfBody };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { BobyStyled, CellOfBody, RowOfBody } from \"./TableBody.styled\";\n\nexport const TableBody = ({ transactions }) => {\n  return (\n    <BobyStyled>\n      {transactions.map(({ id, type, amount, currency }, i) => {\n        return (\n          <RowOfBody key={id} row={i + 1}>\n            <CellOfBody>{type}</CellOfBody>\n            <CellOfBody>{amount}</CellOfBody>\n            <CellOfBody>{currency}</CellOfBody>\n          </RowOfBody>\n        );\n      })}\n    </BobyStyled>\n  );\n};\n\nTableBody.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const TransactionsTable = styled.table`\n  table-layout: fixed;\n  width: 600px;\n  border-collapse: collapse;\n  text-align: center;\n  letter-spacing: 2px;\n  box-shadow: 0 0 4px 6px #21212126;\n  border-radius: 4px;\n  border: 1px solid #8e8e8e;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TableHead } from \"../TableHead/TableHead\";\nimport { TableBody } from \"../TableBody/TableBody\";\nimport { TransactionsTable } from \"../TransactionsHistory/TransactionsHistory.styled\";\n\nexport const TransactionHistory = ({ items }) => {\n  const [, type, amount, currency] = Object.keys(items[0]);\n\n  return (\n    <TransactionsTable>\n      <TableHead type={type} amount={amount} currency={currency} />\n      <TableBody transactions={items} />\n    </TransactionsTable>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.section`\n  padding: 20px;\n`;\n","import React from \"react\";\nimport { Profile } from \"../Profile/Profile/Profile\";\nimport { Statistics } from \"../Statistics/Section/Section\";\nimport { FriendList } from \"../FriendList/FriendList/FriendList\";\nimport { TransactionHistory } from \"../TransactionHistory/TransactionsHistory/TransactionsHistory\";\nimport user from \"../../data/user.json\";\nimport statisticalData from \"../../data/statistical.json\";\nimport friends from \"../../data/friends.json\";\nimport transactions from \"../../data/transactions.json\";\nimport { Wrapper } from \"./App.styles\";\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}