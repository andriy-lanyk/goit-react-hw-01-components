{"version":3,"sources":["components/Task1/Client/default.jpg","components/Task1/Client/Client.styles.js","components/Task1/Client/Client.js","components/Task1/TagList/TagList.styles.js","components/Task1/TagList/TagList.js","components/Task1/Profile/Profile.styles.js","components/Task1/Profile/Profile.js","components/Task2/Title/Title.styled.js","components/Task2/Title/Title.js","components/Task2/Label/Label.styled.js","components/Task2/Label/Label.js","components/Task2/Percentage/Percentage.styled.js","components/Task2/Percentage/Percentage.js","components/Task2/List/List.styled.js","components/Task2/List/List.js","components/Task2/Section/Section.styles.js","components/Task2/Section/Section.js","components/Task3/ItemsOfFriends/ItemsOfFriends.styled.js","components/Task3/ItemsOfFriends/ItemsOfFriends.js","components/Task3/FriendList/FriendList.styled.js","components/Task3/FriendList/FriendList.js","components/Task4/TableHead/TableHead.styled.js","components/Task4/TableHead/TableHead.js","components/Task4/TableBody/TableBody.styled.js","components/Task4/TableBody/TableBody.js","components/Task4/TransactionsHistory/TransactionsHistory.styled.js","components/Task4/TransactionsHistory/TransactionsHistory.js","components/App/App.styles.js","components/App/App.js","index.js"],"names":["ClientLayout","styled","div","ClientImg","img","ClientName","p","ClientTag","ClientLocation","Client","avatar","name","tag","location","src","alt","defaultProps","defaultImg","List","ul","ListItem","li","props","border","ItemNumber","span","TagList","stats","followers","views","likes","ProfileContainer","Profile","user","TitleStatistic","h2","StatisticTitle","title","Label","LabelName","label","Percentage","PercentageNumber","percentage","ListStatistic","randomColor","Math","floor","random","ListStatisticItem","StatisticList","map","id","SectionWrapper","section","Statistics","statisticData","ItemOfFriends","StatusItem","prop","status","AvatarFriend","NameFriend","ItemsOfFriends","friends","isOnline","width","ListOfFriends","FriendList","HeadOfTable","thead","CellOfHead","th","TableHead","type","amount","currency","BobyStyled","tbody","RowOfBody","tr","row","CellOfBody","td","TableBody","transactions","i","TransactionsTable","table","TransactionHistory","items","Object","keys","Wrapper","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70b1ea22.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import styled from \"@emotion/styled\";\n\nconst ClientLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.5;\n  align-items: center;\n  padding: 20px 0;\n`;\n\nconst ClientImg = styled.img`\n  display: block;\n  border-radius: 50%;\n  width: 50%;\n  height: 60%;\n  margin-bottom: 20px;\n  background-color: #21212140;\n`;\n\nconst ClientName = styled.p`\n  font-size: 26px;\n  font-weight: 800;\n  margin: 0 0 10px;\n`;\n\nconst ClientTag = styled.p`\n  margin: 0 0 10px;\n  color: #a0a0a0;\n`;\n\nconst ClientLocation = styled.p`\n  margin: 0;\n  color: #a0a0a0;\n`;\n\nexport { ClientLayout, ClientImg, ClientName, ClientTag, ClientLocation };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport defaultImg from \"./default.jpg\";\nimport {\n  ClientLayout,\n  ClientImg,\n  ClientName,\n  ClientTag,\n  ClientLocation,\n} from \"./Client.styles\";\n\nexport const Client = ({ avatar, name, tag, location }) => {\n  return (\n    <ClientLayout>\n      <ClientImg src={avatar} alt=\"Аватар пользователя\" />\n      <ClientName>{name}</ClientName>\n      <ClientTag>{tag}</ClientTag>\n      <ClientLocation>{location}</ClientLocation>\n    </ClientLayout>\n  );\n};\n\nClient.defaultProps = {\n  avatar: defaultImg,\n};\n\nClient.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nconst List = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  background-color: #e1e8ea;\n  list-style: none;\n  border-top: 1px solid #a0a0a0;\n  padding: 0;\n  margin: 0;\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  font-weight: 400;\n  color: #a0a0a0;\n  border-right: ${(props) =>\n    props.border !== \"none\" ? \"1px solid #a0a0a0;\" : \";\"};\n  padding: 20px;\n  text-align: center;\n  width: 33%;\n`;\n\nconst ItemNumber = styled.span`\n  font-weight: 800;\n  margin-top: 15px;\n  color: #212121;\n`;\n\nexport { List, ListItem, ItemNumber };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, ListItem, ItemNumber } from \"./TagList.styles\";\n\nexport const TagList = ({ stats }) => {\n  const { followers, views, likes } = stats;\n  return (\n    <List>\n      <ListItem>\n        <span>Followers</span>\n        <ItemNumber>{followers}</ItemNumber>\n      </ListItem>\n      <ListItem>\n        <span>Views</span>\n        <ItemNumber>{views}</ItemNumber>\n      </ListItem>\n      <ListItem border=\"none\">\n        <span>Likes</span>\n        <ItemNumber>{likes}</ItemNumber>\n      </ListItem>\n    </List>\n  );\n};\n\nTagList.propTypes = {\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const ProfileContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 400px;\n  height: 500px;\n  border-radius: 2%;\n  box-shadow: 0 0 4px 6px #21212126;\n  margin-bottom: 40px;\n`;\n","import React from \"react\";\nimport { Client } from \"../Client/Client\";\nimport { TagList } from \"../TagList/TagList\";\nimport PropTypes from \"prop-types\";\nimport { ProfileContainer } from \"./Profile.styles\";\n\nexport const Profile = ({ user }) => {\n  const { avatar, name, tag, location, stats } = user;\n  return (\n    <ProfileContainer>\n      <Client avatar={avatar} name={name} tag={tag} location={location} />\n      <TagList stats={stats} />\n    </ProfileContainer>\n  );\n};\n\nProfile.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const TitleStatistic = styled.h2`\n  text-align: center;\n  margin: 0;\n  padding: 35px 0;\n  font-size: 30px;\n  letter-spacing: 2px;\n  color: #8a7c7c;\n  text-transform: uppercase;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TitleStatistic } from \"./Title.styled\";\n\nconst StatisticTitle = ({ title }) => {\n  return title ? <TitleStatistic>{title}</TitleStatistic> : null;\n};\n\nStatisticTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport { StatisticTitle };\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.span`\n  margin-bottom: 20px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Label } from \"./Label.styled\";\n\nexport const LabelName = ({ label }) => {\n  return <Label>{label}</Label>;\n};\n\nLabelName.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Percentage = styled.span`\n  font-size: 28px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Percentage } from \"./Percentage.styled\";\n\nexport const PercentageNumber = ({ percentage }) => {\n  return <Percentage>{percentage}%</Percentage>;\n};\n\nPercentageNumber.propTypes = {\n  percentage: PropTypes.number.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nconst ListStatistic = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  color: white;\n`;\n\nfunction randomColor() {\n  return Math.floor(Math.random() * 255 + 1);\n}\n\nconst ListStatisticItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  text-align: center;\n  padding: 20px 0;\n  background-color: rgb(${randomColor}, ${randomColor}, ${randomColor});\n  width: calc(100%);\n`;\n\nexport { ListStatistic, ListStatisticItem };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LabelName } from \"../Label/Label\";\nimport { PercentageNumber } from \"../Percentage/Percentage\";\nimport { ListStatistic, ListStatisticItem } from \"./List.styled\";\n\nconst StatisticList = ({ stats }) => {\n  return (\n    <ListStatistic>\n      {stats.map(({ id, label, percentage }) => (\n        <ListStatisticItem key={id}>\n          <LabelName label={label} />\n          <PercentageNumber percentage={percentage} />\n        </ListStatisticItem>\n      ))}\n    </ListStatistic>\n  );\n};\n\nStatisticList.propTypes = {\n  stats: PropTypes.array.isRequired,\n};\n\nexport { StatisticList };\n","import styled from \"@emotion/styled\";\n\nexport const SectionWrapper = styled.section`\n  width: 400px;\n  box-shadow: 0 0 4px 6px #21212126;\n  border-radius: 0 0 10px 10px;\n  overflow: hidden;\n  margin-bottom: 50px;\n`;\n","import React from \"react\";\nimport { StatisticTitle } from \"../Title/Title\";\nimport { StatisticList } from \"../List/List\";\nimport statisticData from \"../../../data/statistical.json\";\nimport { SectionWrapper } from \"./Section.styles\";\n\nconst Statistics = () => {\n  return (\n    <SectionWrapper>\n      <StatisticTitle title=\"Upload stats\" />\n      <StatisticList stats={statisticData} />\n    </SectionWrapper>\n  );\n};\n\nexport { Statistics };\n","import styled from \"@emotion/styled\";\n\nconst ItemOfFriends = styled.li`\n  display: flex;\n  width: 380px;\n  height: 90px;\n  box-shadow: 0 0 4px 6px #21212126;\n  margin-bottom: 20px;\n  padding: 10px;\n`;\n\nconst StatusItem = styled.span`\n  width: 20px;\n  height: 20px;\n  margin: auto 10px;\n  border: 1px solid #212121;\n  border-radius: 50%;\n  background-color: ${(prop) => (prop.status ? \"green\" : \"red\")};\n`;\n\nconst AvatarFriend = styled.img`\n  display: block;\n  width: 80px;\n  height: auto;\n  border-radius: 4px;\n  margin-right: 30px;\n`;\n\nconst NameFriend = styled.p`\n  margin: auto 0;\n  font-size: 36px;\n  font-weight: 800;\n`;\n\nexport { ItemOfFriends, StatusItem, AvatarFriend, NameFriend };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ItemOfFriends,\n  StatusItem,\n  AvatarFriend,\n  NameFriend,\n} from \"./ItemsOfFriends.styled\";\n\nexport const ItemsOfFriends = ({ friends }) => {\n  return friends.map(({ avatar, name, isOnline, id }) => (\n    <ItemOfFriends key={id}>\n      <StatusItem status={isOnline}></StatusItem>\n      <AvatarFriend src={avatar} alt={name} width=\"48\" />\n      <NameFriend>{name}</NameFriend>\n    </ItemOfFriends>\n  ));\n};\n\nItemsOfFriends.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const ListOfFriends = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n","import React from \"react\";\nimport friends from \"../../../data/friends.json\";\nimport { ItemsOfFriends } from \"../ItemsOfFriends/ItemsOfFriends\";\nimport { ListOfFriends } from \"./FriendList.styled\";\n\nexport const FriendList = () => {\n  return (\n    <ListOfFriends>\n      <ItemsOfFriends friends={friends} />\n    </ListOfFriends>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nconst HeadOfTable = styled.thead`\n  text-transform: uppercase;\n  color: #ffffff;\n  background-color: skyblue;\n`;\n\nconst CellOfHead = styled.th`\n  padding: 10px;\n  border-right: 1px solid #8e8e8e;\n`;\n\nexport { HeadOfTable, CellOfHead };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { HeadOfTable, CellOfHead } from \"../TableHead/TableHead.styled\";\n\nexport const TableHead = ({ type, amount, currency }) => {\n  return (\n    <HeadOfTable>\n      <tr>\n        <CellOfHead>{type}</CellOfHead>\n        <CellOfHead>{amount}</CellOfHead>\n        <CellOfHead>{currency}</CellOfHead>\n      </tr>\n    </HeadOfTable>\n  );\n};\n\nTableHead.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nconst BobyStyled = styled.tbody`\n  color: #8e8e8e;\n  text-transform: capitalize;\n`;\n\nconst RowOfBody = styled.tr`\n  background-color: ${(prop) => (prop.row % 2 === 0 ? \"#e2e2e2\" : \"#ffffff\")};\n`;\n\nconst CellOfBody = styled.td`\n  padding: 10px;\n  border-right: 1px solid #8e8e8e;\n`;\n\nexport { BobyStyled, CellOfBody, RowOfBody };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { BobyStyled, CellOfBody, RowOfBody } from \"./TableBody.styled\";\n\nexport const TableBody = ({ transactions }) => {\n  return (\n    <BobyStyled>\n      {transactions.map(({ id, type, amount, currency }, i) => {\n        return (\n          <RowOfBody key={id} row={i + 1}>\n            <CellOfBody>{type}</CellOfBody>\n            <CellOfBody>{amount}</CellOfBody>\n            <CellOfBody>{currency}</CellOfBody>\n          </RowOfBody>\n        );\n      })}\n    </BobyStyled>\n  );\n};\n\nTableBody.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const TransactionsTable = styled.table`\n  table-layout: fixed;\n  width: 600px;\n  border-collapse: collapse;\n  text-align: center;\n  letter-spacing: 2px;\n  box-shadow: 0 0 4px 6px #21212126;\n  border-radius: 4px;\n  border: 1px solid #8e8e8e;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TableHead } from \"../TableHead/TableHead\";\nimport { TableBody } from \"../TableBody/TableBody\";\nimport { TransactionsTable } from \"../TransactionsHistory/TransactionsHistory.styled\";\n\nexport const TransactionHistory = ({ items }) => {\n  const [, type, amount, currency] = Object.keys(items[0]);\n\n  return (\n    <TransactionsTable>\n      <TableHead type={type} amount={amount} currency={currency} />\n      <TableBody transactions={items} />\n    </TransactionsTable>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.section`\n  padding: 20px;\n`;\n","import React from \"react\";\nimport { Profile } from \"../Task1/Profile/Profile\";\nimport { Statistics } from \"../Task2/Section/Section\";\nimport { FriendList } from \"../Task3/FriendList/FriendList\";\nimport { TransactionHistory } from \"../Task4/TransactionsHistory/TransactionsHistory\";\nimport user from \"../../data/user.json\";\nimport transactions from \"../../data/transactions.json\";\nimport { Wrapper } from \"./App.styles\";\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <Profile user={user} />\n      <Statistics />\n      <FriendList />\n      <TransactionHistory items={transactions} />\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}